[{"F:\\RhombIT\\frontend\\src\\index.tsx":"1","F:\\RhombIT\\frontend\\src\\redux\\store.ts":"2","F:\\RhombIT\\frontend\\src\\redux\\reducers\\index.ts":"3","F:\\RhombIT\\frontend\\src\\components\\redux\\actions\\notification.ts":"4","F:\\RhombIT\\frontend\\src\\pages\\login\\redux\\types.ts":"5","F:\\RhombIT\\frontend\\src\\App.tsx":"6","F:\\RhombIT\\frontend\\src\\pages\\login\\components\\Login\\index.tsx":"7","F:\\RhombIT\\frontend\\src\\components\\AppBar\\index.tsx":"8","F:\\RhombIT\\frontend\\src\\constants\\styles.ts":"9","F:\\RhombIT\\frontend\\src\\browserStorage\\LocalStorage.ts":"10","F:\\RhombIT\\frontend\\src\\theme\\index.tsx":"11","F:\\RhombIT\\frontend\\src\\components\\Notifier\\index.tsx":"12","F:\\RhombIT\\frontend\\src\\components\\AuthApp\\index.tsx":"13","F:\\RhombIT\\frontend\\src\\redux\\sagas\\index.ts":"14","F:\\RhombIT\\frontend\\src\\pages\\login\\redux\\actions\\index.ts":"15","F:\\RhombIT\\frontend\\src\\pages\\login\\view\\index.tsx":"16","F:\\RhombIT\\frontend\\src\\components\\redux\\reducers\\index.ts":"17","F:\\RhombIT\\frontend\\src\\Routes.tsx":"18","F:\\RhombIT\\frontend\\src\\reportWebVitals.ts":"19","F:\\RhombIT\\frontend\\src\\components\\redux\\actions\\index.ts":"20","F:\\RhombIT\\frontend\\src\\pages\\login\\redux\\saga\\login.ts":"21","F:\\RhombIT\\frontend\\src\\pages\\login\\redux\\saga\\index.ts":"22","F:\\RhombIT\\frontend\\src\\components\\redux\\reducers\\notification.ts":"23","F:\\RhombIT\\frontend\\src\\pages\\login\\redux\\services\\index.ts":"24","F:\\RhombIT\\frontend\\src\\pages\\login\\components\\CopyRight\\index.tsx":"25","F:\\RhombIT\\frontend\\src\\pages\\login\\redux\\saga\\logout.ts":"26","F:\\RhombIT\\frontend\\src\\pages\\home\\view\\index.tsx":"27","F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\sagas\\jobs.ts":"28","F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\services\\index.ts":"29","F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\reducers\\jobs.ts":"30","F:\\RhombIT\\frontend\\src\\pages\\home\\components\\JobRow\\index.tsx":"31","F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\sagas\\index.ts":"32","F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\reducers\\users.ts":"33","F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\sagas\\customers.ts":"34","F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\types.ts":"35","F:\\RhombIT\\frontend\\src\\pages\\home\\components\\JobForm\\index.tsx":"36","F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\actions\\index.ts":"37","F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\actions\\jobs.ts":"38","F:\\RhombIT\\frontend\\src\\pages\\home\\view\\UserTab\\index.tsx":"39","F:\\RhombIT\\frontend\\src\\pages\\job\\view\\index.tsx":"40","F:\\RhombIT\\frontend\\src\\pages\\login\\redux\\reducers\\index.ts":"41","F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\reducers\\customers.ts":"42","F:\\RhombIT\\frontend\\src\\pages\\home\\components\\TabPanel\\index.tsx":"43","F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\actions\\customers.ts":"44","F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\sagas\\messages.ts":"45","F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\sagas\\tasks.ts":"46","F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\reducers\\tasks.ts":"47","F:\\RhombIT\\frontend\\src\\pages\\home\\view\\CustomerTab\\index.tsx":"48"},{"size":1382,"mtime":1610220474526,"results":"49","hashOfConfig":"50"},{"size":1292,"mtime":1610258305290,"results":"51","hashOfConfig":"50"},{"size":382,"mtime":1610236124341,"results":"52","hashOfConfig":"50"},{"size":1112,"mtime":1610217897808,"results":"53","hashOfConfig":"50"},{"size":1361,"mtime":1610222399377,"results":"54","hashOfConfig":"50"},{"size":711,"mtime":1610222673334,"results":"55","hashOfConfig":"50"},{"size":2436,"mtime":1610224071217,"results":"56","hashOfConfig":"50"},{"size":3138,"mtime":1610270004461,"results":"57","hashOfConfig":"50"},{"size":793,"mtime":1610270814738,"results":"58","hashOfConfig":"50"},{"size":539,"mtime":1610215647308,"results":"59","hashOfConfig":"50"},{"size":920,"mtime":1610228610762,"results":"60","hashOfConfig":"50"},{"size":1359,"mtime":1610217885809,"results":"61","hashOfConfig":"50"},{"size":1409,"mtime":1610269029351,"results":"62","hashOfConfig":"50"},{"size":560,"mtime":1610253964399,"results":"63","hashOfConfig":"50"},{"size":718,"mtime":1610224900054,"results":"64","hashOfConfig":"50"},{"size":2055,"mtime":1610221383564,"results":"65","hashOfConfig":"50"},{"size":32,"mtime":1610220362658,"results":"66","hashOfConfig":"50"},{"size":347,"mtime":1610248470640,"results":"67","hashOfConfig":"50"},{"size":425,"mtime":1610207190167,"results":"68","hashOfConfig":"50"},{"size":32,"mtime":1610217893633,"results":"69","hashOfConfig":"50"},{"size":2081,"mtime":1610226764418,"results":"70","hashOfConfig":"50"},{"size":51,"mtime":1610224241058,"results":"71","hashOfConfig":"50"},{"size":972,"mtime":1610224269298,"results":"72","hashOfConfig":"50"},{"size":306,"mtime":1610224823857,"results":"73","hashOfConfig":"50"},{"size":1122,"mtime":1610221261977,"results":"74","hashOfConfig":"50"},{"size":831,"mtime":1610219403193,"results":"75","hashOfConfig":"50"},{"size":2505,"mtime":1610241666734,"results":"76","hashOfConfig":"50"},{"size":1734,"mtime":1610254871451,"results":"77","hashOfConfig":"50"},{"size":1876,"mtime":1610263556473,"results":"78","hashOfConfig":"50"},{"size":605,"mtime":1610254994936,"results":"79","hashOfConfig":"50"},{"size":1864,"mtime":1610269594460,"results":"80","hashOfConfig":"50"},{"size":76,"mtime":1610236124341,"results":"81","hashOfConfig":"50"},{"size":402,"mtime":1610236124340,"results":"82","hashOfConfig":"50"},{"size":700,"mtime":1610236124341,"results":"83","hashOfConfig":"50"},{"size":5504,"mtime":1610258282450,"results":"84","hashOfConfig":"50"},{"size":5456,"mtime":1610247411821,"results":"85","hashOfConfig":"50"},{"size":76,"mtime":1610241694609,"results":"86","hashOfConfig":"50"},{"size":429,"mtime":1610254871451,"results":"87","hashOfConfig":"50"},{"size":2403,"mtime":1610269616195,"results":"88","hashOfConfig":"50"},{"size":15795,"mtime":1610270400389,"results":"89","hashOfConfig":"50"},{"size":524,"mtime":1610219049154,"results":"90","hashOfConfig":"50"},{"size":434,"mtime":1610236124340,"results":"91","hashOfConfig":"50"},{"size":1147,"mtime":1610228236800,"results":"92","hashOfConfig":"50"},{"size":176,"mtime":1610236795850,"results":"93","hashOfConfig":"50"},{"size":1510,"mtime":1610253911695,"results":"94","hashOfConfig":"50"},{"size":2360,"mtime":1610268632244,"results":"95","hashOfConfig":"50"},{"size":555,"mtime":1610265932376,"results":"96","hashOfConfig":"50"},{"size":2398,"mtime":1610269609155,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"13galg6",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"100"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\RhombIT\\frontend\\src\\index.tsx",[],["200","201"],"F:\\RhombIT\\frontend\\src\\redux\\store.ts",[],"F:\\RhombIT\\frontend\\src\\redux\\reducers\\index.ts",[],"F:\\RhombIT\\frontend\\src\\components\\redux\\actions\\notification.ts",[],["202","203"],"F:\\RhombIT\\frontend\\src\\pages\\login\\redux\\types.ts",[],["204","205"],"F:\\RhombIT\\frontend\\src\\App.tsx",[],["206","207"],"F:\\RhombIT\\frontend\\src\\pages\\login\\components\\Login\\index.tsx",[],["208","209"],"F:\\RhombIT\\frontend\\src\\components\\AppBar\\index.tsx",[],"F:\\RhombIT\\frontend\\src\\constants\\styles.ts",[],"F:\\RhombIT\\frontend\\src\\browserStorage\\LocalStorage.ts",["210"],"import { LoginState } from 'pages/login/redux/types'\r\n\r\nconst LOGIN_RESPONSE_KEY = 'loginResponse'\r\n\r\nexport default {\r\n  getLoginResponse: (): LoginState | null => {\r\n    try {\r\n      return JSON.parse(localStorage.getItem(LOGIN_RESPONSE_KEY) || '')\r\n    } catch (error) {\r\n      return null\r\n    }\r\n  },\r\n\r\n  saveLoginResponse: (loginResponse: LoginState) => {\r\n    localStorage.setItem(LOGIN_RESPONSE_KEY, JSON.stringify(loginResponse))\r\n  },\r\n\r\n  removeLoginResponse: () => {\r\n    localStorage.removeItem(LOGIN_RESPONSE_KEY)\r\n  },\r\n}\r\n","F:\\RhombIT\\frontend\\src\\theme\\index.tsx",[],"F:\\RhombIT\\frontend\\src\\components\\Notifier\\index.tsx",[],"F:\\RhombIT\\frontend\\src\\components\\AuthApp\\index.tsx",["211"],"F:\\RhombIT\\frontend\\src\\redux\\sagas\\index.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\login\\redux\\actions\\index.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\login\\view\\index.tsx",[],"F:\\RhombIT\\frontend\\src\\components\\redux\\reducers\\index.ts",[],"F:\\RhombIT\\frontend\\src\\Routes.tsx",[],"F:\\RhombIT\\frontend\\src\\reportWebVitals.ts",[],"F:\\RhombIT\\frontend\\src\\components\\redux\\actions\\index.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\login\\redux\\saga\\login.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\login\\redux\\saga\\index.ts",[],"F:\\RhombIT\\frontend\\src\\components\\redux\\reducers\\notification.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\login\\redux\\services\\index.ts",["212"],"F:\\RhombIT\\frontend\\src\\pages\\login\\components\\CopyRight\\index.tsx",[],"F:\\RhombIT\\frontend\\src\\pages\\login\\redux\\saga\\logout.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\view\\index.tsx",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\sagas\\jobs.ts",["213","214","215"],"F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\services\\index.ts",["216","217"],"F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\reducers\\jobs.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\components\\JobRow\\index.tsx",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\sagas\\index.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\reducers\\users.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\sagas\\customers.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\types.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\components\\JobForm\\index.tsx",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\actions\\index.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\actions\\jobs.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\view\\UserTab\\index.tsx",[],"F:\\RhombIT\\frontend\\src\\pages\\job\\view\\index.tsx",["218","219","220","221"],"F:\\RhombIT\\frontend\\src\\pages\\login\\redux\\reducers\\index.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\reducers\\customers.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\components\\TabPanel\\index.tsx",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\actions\\customers.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\sagas\\messages.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\sagas\\tasks.ts",["222","223","224","225","226","227","228","229","230","231","232","233","234"],"F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\reducers\\tasks.ts",["235","236","237","238","239","240"],"F:\\RhombIT\\frontend\\src\\pages\\home\\view\\CustomerTab\\index.tsx",[],{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"241","replacedBy":"245"},{"ruleId":"243","replacedBy":"246"},{"ruleId":"241","replacedBy":"247"},{"ruleId":"243","replacedBy":"248"},{"ruleId":"241","replacedBy":"249"},{"ruleId":"243","replacedBy":"250"},{"ruleId":"241","replacedBy":"251"},{"ruleId":"243","replacedBy":"252"},{"ruleId":"253","severity":1,"message":"254","line":5,"column":1,"nodeType":"255","endLine":21,"endColumn":2},{"ruleId":"256","severity":1,"message":"257","line":3,"column":10,"nodeType":"258","messageId":"259","endLine":3,"endColumn":19},{"ruleId":"253","severity":1,"message":"254","line":5,"column":1,"nodeType":"255","endLine":13,"endColumn":2},{"ruleId":"256","severity":1,"message":"260","line":5,"column":3,"nodeType":"258","messageId":"259","endLine":5,"endColumn":19},{"ruleId":"256","severity":1,"message":"261","line":9,"column":3,"nodeType":"258","messageId":"259","endLine":9,"endColumn":22},{"ruleId":"256","severity":1,"message":"262","line":14,"column":3,"nodeType":"258","messageId":"259","endLine":14,"endColumn":17},{"ruleId":"256","severity":1,"message":"262","line":3,"column":79,"nodeType":"258","messageId":"259","endLine":3,"endColumn":93},{"ruleId":"253","severity":1,"message":"254","line":5,"column":1,"nodeType":"255","endLine":66,"endColumn":2},{"ruleId":"256","severity":1,"message":"263","line":2,"column":10,"nodeType":"258","messageId":"259","endLine":2,"endColumn":21},{"ruleId":"256","severity":1,"message":"264","line":6,"column":83,"nodeType":"258","messageId":"259","endLine":6,"endColumn":86},{"ruleId":"256","severity":1,"message":"265","line":6,"column":88,"nodeType":"258","messageId":"259","endLine":6,"endColumn":92},{"ruleId":"256","severity":1,"message":"266","line":9,"column":37,"nodeType":"258","messageId":"259","endLine":9,"endColumn":47},{"ruleId":"256","severity":1,"message":"267","line":4,"column":5,"nodeType":"258","messageId":"259","endLine":4,"endColumn":20},{"ruleId":"256","severity":1,"message":"260","line":5,"column":5,"nodeType":"258","messageId":"259","endLine":5,"endColumn":21},{"ruleId":"256","severity":1,"message":"268","line":7,"column":5,"nodeType":"258","messageId":"259","endLine":7,"endColumn":15},{"ruleId":"256","severity":1,"message":"269","line":8,"column":5,"nodeType":"258","messageId":"259","endLine":8,"endColumn":23},{"ruleId":"256","severity":1,"message":"270","line":12,"column":5,"nodeType":"258","messageId":"259","endLine":12,"endColumn":17},{"ruleId":"256","severity":1,"message":"261","line":13,"column":5,"nodeType":"258","messageId":"259","endLine":13,"endColumn":24},{"ruleId":"256","severity":1,"message":"271","line":14,"column":5,"nodeType":"258","messageId":"259","endLine":14,"endColumn":17},{"ruleId":"256","severity":1,"message":"272","line":15,"column":5,"nodeType":"258","messageId":"259","endLine":15,"endColumn":25},{"ruleId":"256","severity":1,"message":"273","line":18,"column":5,"nodeType":"258","messageId":"259","endLine":18,"endColumn":12},{"ruleId":"256","severity":1,"message":"274","line":19,"column":5,"nodeType":"258","messageId":"259","endLine":19,"endColumn":20},{"ruleId":"256","severity":1,"message":"262","line":20,"column":5,"nodeType":"258","messageId":"259","endLine":20,"endColumn":19},{"ruleId":"256","severity":1,"message":"275","line":21,"column":5,"nodeType":"258","messageId":"259","endLine":21,"endColumn":9},{"ruleId":"256","severity":1,"message":"276","line":25,"column":5,"nodeType":"258","messageId":"259","endLine":25,"endColumn":24},{"ruleId":"256","severity":1,"message":"277","line":2,"column":5,"nodeType":"258","messageId":"259","endLine":2,"endColumn":27},{"ruleId":"256","severity":1,"message":"278","line":3,"column":5,"nodeType":"258","messageId":"259","endLine":3,"endColumn":24},{"ruleId":"256","severity":1,"message":"279","line":4,"column":5,"nodeType":"258","messageId":"259","endLine":4,"endColumn":29},{"ruleId":"256","severity":1,"message":"280","line":6,"column":5,"nodeType":"258","messageId":"259","endLine":6,"endColumn":12},{"ruleId":"256","severity":1,"message":"281","line":7,"column":5,"nodeType":"258","messageId":"259","endLine":7,"endColumn":20},{"ruleId":"256","severity":1,"message":"276","line":10,"column":5,"nodeType":"258","messageId":"259","endLine":10,"endColumn":24},"no-native-reassign",["282"],"no-negated-in-lhs",["283"],["282"],["283"],["282"],["283"],["282"],["283"],["282"],["283"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'CreateJobPayload' is defined but never used.","'GetJobSuccessAction' is defined but never used.","'JobFormPayload' is defined but never used.","'useLocation' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'getAllJobs' is defined but never used.","'CreateJobAction' is defined but never used.","'CREATE_JOB' is defined but never used.","'CREATE_JOB_SUCCESS' is defined but never used.","'GetJobAction' is defined but never used.","'GET_ALL_JOBS' is defined but never used.","'GET_ALL_JOBS_SUCCESS' is defined but never used.","'GET_JOB' is defined but never used.","'GET_JOB_SUCCESS' is defined but never used.","'Jobs' is defined but never used.","'UPDATE_TASK_SUCCESS' is defined but never used.","'CREATE_MESSAGE_SUCCESS' is defined but never used.","'CREATE_TASK_SUCCESS' is defined but never used.","'GET_ALL_MESSAGES_SUCCESS' is defined but never used.","'Message' is defined but never used.","'MessagesActions' is defined but never used.","no-global-assign","no-unsafe-negation"]p, Button, Fade, IconButton, ListItemText, Menu, MenuItem, Modal, Tab, Tabs, TextField, Typography } from '@material-ui/core'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AppState } from 'redux/types'\r\nimport { createMessage, createTask, getAllJobs, getAllMessages, getAllTasks, getJob, updateTask } from 'pages/home/redux/actions'\r\nimport moment from 'moment'\r\nimport { Task } from 'pages/home/redux/types';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    wrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        border: '1px solid black',\r\n        width: '50%'\r\n    },\r\n    titleContainer: {\r\n        backgroundColor: 'black',\r\n        color: 'white',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        padding: theme.spacing(2)\r\n    },\r\n    contentContainer: {\r\n        display: 'flex',\r\n        minHeight: theme.spacing(80)\r\n    },\r\n    leftContent: {\r\n        width: '65%',\r\n        borderRight: '1px solid black',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    rightContent: {\r\n        width: '35%'\r\n    },\r\n    infoContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '50%',\r\n        padding: theme.spacing(1),\r\n        borderBottom: '1px solid black'\r\n    },\r\n    infoElem: {\r\n        textOverflow: 'ellipsis',\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    taskContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '50%',\r\n        padding: theme.spacing(1),\r\n        overflowY: 'auto'\r\n    },\r\n    taskHeader: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    messagesContent: {\r\n        height: '90%',\r\n        padding: theme.spacing(2),\r\n        overflowY: 'auto'\r\n    },\r\n    messagesInputContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        height: '10%',\r\n        alignItems: 'flex-end'\r\n    },\r\n    messageContainer: {\r\n        padding: theme.spacing(1, 2),\r\n        border: '1px solid black',\r\n        borderRadius: theme.spacing(1.25),\r\n        marginBottom: theme.spacing(3),\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    messageInput: {\r\n        borderTop: '1px solid black',\r\n        borderRight: '1px solid black',\r\n        padding: theme.spacing(0, 1),\r\n        width: '90%',\r\n        textDecoration: 'none'\r\n    },\r\n    task: {\r\n        marginBottom: theme.spacing(1),\r\n        borderRadius: theme.spacing(0.5),\r\n        border: '1px solid black',\r\n        textAlign: 'center'\r\n    },\r\n    taskTitle: {\r\n\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        minWidth: theme.spacing(40)\r\n    },\r\n    singleTaskContainer: {\r\n        padding: theme.spacing(1, 2),\r\n        borderBottom: '1px solid black',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    }\r\n}))\r\n\r\nconst JobView = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const { jobId } = useParams<{ jobId: string }>()\r\n    const job = useSelector((state: AppState) => state.jobs.find(job => job._id === jobId))\r\n    const messages = useSelector((state: AppState) => state.messages)\r\n    const tasks = useSelector((state: AppState) => state.tasks)\r\n\r\n    const isAssigned = (messId: string) => {\r\n        let assigned = false\r\n        tasks.forEach(task => {\r\n            task.messages.forEach(mess => {\r\n                if (mess._id === messId) {\r\n                    assigned = true\r\n                }\r\n            })\r\n        })\r\n\r\n        return assigned\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getJob(jobId))\r\n        dispatch(getAllMessages(jobId))\r\n        dispatch(getAllTasks(jobId))\r\n    }, [dispatch, jobId])\r\n\r\n    const jobData = job && [{\r\n        key: \"ID\",\r\n        data: job._id\r\n    }, {\r\n        key: \"Status\",\r\n        data: job.status\r\n    },\r\n    {\r\n        key: \"Date State\",\r\n        data: moment(job.startDate).format('DD/MM/YYYY')\r\n    },\r\n    {\r\n        key: \"Date End\",\r\n        data: moment(job.endDate).format('DD/MM/YYYY')\r\n    },\r\n    {\r\n        key: \"Info\",\r\n        data: job.info\r\n    },]\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const target = e.currentTarget;\r\n        setText(target.value);\r\n    };\r\n\r\n    const handleSend = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        dispatch(createMessage({ text, jobId }))\r\n        setText('')\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\r\n\r\n    const handleMessageClick = (event: React.MouseEvent<HTMLElement>) => {\r\n        event.stopPropagation()\r\n        setAnchorEl(event.currentTarget)\r\n    };\r\n\r\n    const handleMessageClose = (event: React.MouseEvent<HTMLElement>) => {\r\n        event.stopPropagation()\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    const handleAssignTask = (taskId: string, messId: string, mess: string) => {\r\n\r\n        dispatch(updateTask({\r\n            taskId: taskId,\r\n            jobId: jobId,\r\n            dueDate: (jobData && new Date(jobData[3].data)) as Date,\r\n            messages: [...tasks.filter(task => task._id === taskId)[0].messages, {\r\n                jobId: jobId,\r\n                text: mess,\r\n                _id: messId\r\n            }]\r\n        }))\r\n        setAssignModalOpen(false)\r\n    }\r\n\r\n    const [createModalOpen, setCreateModalOpen] = useState(false);\r\n    const [assignModalOpen, setAssignModalOpen] = useState(false);\r\n    const [showTaskModalOpen, setShowTaskModalOpen] = useState(false);\r\n    const [taskOpen, setTaskOpen] = useState<Task | undefined>()\r\n\r\n    const handleCreateClick = (messId: string, mess: string) => {\r\n        dispatch(createTask({\r\n            jobId: jobId,\r\n            dueDate: (jobData && new Date(jobData[3].data)) as Date,\r\n            messages: [{\r\n                jobId: jobId,\r\n                text: mess,\r\n                _id: messId\r\n            }]\r\n        }))\r\n        setCreateModalOpen(true);\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const handleAssignClick = (messId: string, mess: string) => {\r\n        setAssignModalOpen(true);\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const handleShowTaskClick = (task: Task) => {\r\n        setTaskOpen(task)\r\n        setShowTaskModalOpen(true)\r\n    }\r\n\r\n    const handleAssignModalClose = () => {\r\n        setAssignModalOpen(false);\r\n    };\r\n\r\n    const handleCreateModalClose = () => {\r\n        setCreateModalOpen(false);\r\n    };\r\n\r\n    const handleShowTaskModalClose = () => {\r\n        setTaskOpen(undefined)\r\n        setShowTaskModalOpen(false);\r\n    };\r\n\r\n    type Props = {\r\n        messId: string,\r\n        mess: string\r\n    }\r\n\r\n    const CreateTaskModal = ({ messId, mess }: Props) => (\r\n        <Modal\r\n            className={classes.modal}\r\n            open={createModalOpen}\r\n            onClose={handleCreateModalClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500,\r\n            }}\r\n        >\r\n            <Fade in={createModalOpen}>\r\n                <div className={classes.paper}>\r\n                    <div className={classes.singleTaskContainer}>\r\n                        <Typography>\r\n                            {mess}\r\n                        </Typography>\r\n                    </div>\r\n                    <div className={classes.singleTaskContainer}>\r\n                        <Typography>\r\n                            Due Date: {jobData && jobData[3].data}\r\n                        </Typography>\r\n                    </div>\r\n                </div>\r\n            </Fade>\r\n        </Modal>\r\n    )\r\n\r\n    const AssignTaskModal = ({ messId, mess }: Props) => (\r\n        <Modal\r\n            className={classes.modal}\r\n            open={assignModalOpen}\r\n            onClose={handleAssignModalClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500,\r\n            }}\r\n        >\r\n            <Fade in={assignModalOpen}>\r\n                <div className={classes.paper}>\r\n                    {tasks.map((task, index) => (\r\n                        <MenuItem key={index} className={classes.singleTaskContainer} onClick={() => handleAssignTask(task._id, messId, mess)}>\r\n                            <Typography>\r\n                                Task {index + 1}\r\n                            </Typography>\r\n                        </MenuItem>\r\n                    ))}\r\n                </div>\r\n            </Fade>\r\n        </Modal>\r\n    )\r\n\r\n    type TaskModalProps = {\r\n        task?: Task\r\n    }\r\n\r\n    const ShowTaskModal = ({ task }: TaskModalProps) => {\r\n        if (!task) return <></>\r\n        return (\r\n            <Modal\r\n                className={classes.modal}\r\n                open={showTaskModalOpen}\r\n                onClose={handleShowTaskModalClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={showTaskModalOpen}>\r\n                    <div className={classes.paper}>\r\n                        {task.messages.map((elem, index) => (\r\n                            <div key={index} className={classes.singleTaskContainer}>\r\n                                <Typography>\r\n                                    {elem.text}\r\n                                </Typography>\r\n                                <IconButton aria-label=\"show mess\" onClick={() => { }}>\r\n                                    <RemoveRedEyeIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        ))}\r\n                        <div className={classes.singleTaskContainer}>\r\n                            <Typography>\r\n                                Due Date: {moment(task.dueDate).format('DD/MM/YYYY')}\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n\r\n    if (!job) return <></>\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.container}>\r\n                <div className={classes.titleContainer}>\r\n                    <Typography>\r\n                        JOB: {job.name}\r\n                    </Typography>\r\n                </div>\r\n                <div className={classes.contentContainer}>\r\n                    <div className={classes.leftContent}>\r\n                        <div className={classes.messagesContent}>\r\n                            {messages.map(mess => (\r\n                                <div key={mess._id} className={classes.messageContainer} style={{ borderColor: isAssigned(mess._id) ? 'green' : 'black' }}>\r\n                                    <Typography>\r\n                                        {mess.text}\r\n                                    </Typography>\r\n                                    <IconButton aria-label=\"more options\"\r\n                                        onClick={handleMessageClick}>\r\n                                        <MoreVertIcon />\r\n                                    </IconButton>\r\n                                    <Menu\r\n                                        anchorEl={anchorEl}\r\n                                        keepMounted\r\n                                        open={!!anchorEl}\r\n                                        onClose={handleMessageClose}\r\n                                        TransitionComponent={Fade}\r\n                                        getContentAnchorEl={null}\r\n                                        anchorOrigin={{\r\n                                            vertical: 'bottom',\r\n                                            horizontal: 'center',\r\n                                        }}\r\n                                        transformOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'left',\r\n                                        }}\r\n                                    >\r\n                                        <MenuItem onClick={() => handleCreateClick(mess._id, mess.text)}>\r\n                                            <ListItemText primary=\"Create Task\" />\r\n                                        </MenuItem>\r\n                                        <MenuItem onClick={() => handleAssignClick(mess._id, mess.text)}>\r\n                                            <ListItemText primary=\"Assign to Task\" />\r\n                                        </MenuItem>\r\n                                    </Menu>\r\n                                    <CreateTaskModal messId={mess._id} mess={mess.text} />\r\n                                    <AssignTaskModal messId={mess._id} mess={mess.text} />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className={classes.messagesInputContainer}>\r\n                            <TextField\r\n                                name='text'\r\n                                type=\"text\"\r\n                                autoComplete=\"off\"\r\n                                value={text}\r\n                                onChange={handleChange}\r\n                                className={classes.messageInput}\r\n                                inputProps={{ disableUnderline: true }}\r\n                            />\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                size=\"small\"\r\n                                onClick={handleSend}\r\n                            >\r\n                                Send\r\n                        </Button>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.rightContent}>\r\n                        <div className={classes.infoContainer}>\r\n                            {jobData && jobData.map((elem, index) => (\r\n                                <Typography key={index} className={classes.infoElem}>\r\n                                    {elem.key}: {elem.data}\r\n                                </Typography>\r\n                            ))}\r\n                        </div>\r\n                        <div className={classes.taskContainer}>\r\n                            <Typography className={classes.taskHeader}>Task list</Typography>\r\n                            {tasks.length > 0 && tasks.map((task, index) => (\r\n                                <>\r\n                                    <Button key={index} className={classes.task} size='small' onClick={() => handleShowTaskClick(task)}>\r\n                                        <Typography className={classes.taskTitle}>Task {index + 1}</Typography>\r\n                                    </Button>\r\n                                </>\r\n                            ))}\r\n                            <ShowTaskModal task={taskOpen} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JobView\r\n","F:\\RhombIT\\frontend\\src\\pages\\login\\redux\\reducers\\index.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\reducers\\customers.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\components\\TabPanel\\index.tsx",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\actions\\customers.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\sagas\\messages.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\sagas\\tasks.ts",["244","245","246","247","248","249","250","251","252","253","254","255","256"],"import { takeEvery, call, put } from 'redux-saga/effects'\r\n\r\nimport {\r\n    CreateJobAction,\r\n    CreateJobPayload,\r\n    CreateTaskAction,\r\n    CREATE_JOB,\r\n    CREATE_JOB_SUCCESS,\r\n    CREATE_TASK,\r\n    CREATE_TASK_SUCCESS,\r\n    GetAllTasksAction,\r\n    GetJobAction,\r\n    GetJobSuccessAction,\r\n    GET_ALL_JOBS,\r\n    GET_ALL_JOBS_SUCCESS,\r\n    GET_ALL_TASKS,\r\n    GET_ALL_TASKS_SUCCESS,\r\n    GET_JOB,\r\n    GET_JOB_SUCCESS,\r\n    JobFormPayload,\r\n    Jobs,\r\n    Task,\r\n    UpdateTaskAction,\r\n    UPDATE_TASK,\r\n    UPDATE_TASK_SUCCESS\r\n} from '../types'\r\nimport Services from '../services'\r\nimport { showNotification } from 'components/redux/actions'\r\nimport { getAllTasks} from '../actions'\r\nexport function* getTasks() {\r\n    yield takeEvery(GET_ALL_TASKS, function* (payload: GetAllTasksAction) {\r\n        try {\r\n            const res: Task[] = yield call(Services.getAllTasks, payload.jobId)\r\n\r\n            if (res) {\r\n                yield put({\r\n                    type: GET_ALL_TASKS_SUCCESS,\r\n                    payload: res,\r\n                })\r\n            }\r\n        } catch (error) {\r\n            yield put(showNotification(error.response.data.message, {\r\n                variant: 'error',\r\n            }))\r\n        }\r\n    }\r\n    )\r\n}\r\n\r\nexport function* createTask() {\r\n    yield takeEvery(CREATE_TASK, function* (payload: CreateTaskAction) {\r\n        try {\r\n            const res = yield call(Services.createTask, payload.payload)\r\n\r\n            if (res) {\r\n                yield put({\r\n                    type: CREATE_TASK_SUCCESS,\r\n                    payload: res,\r\n                })\r\n                yield put(getAllTasks(payload.payload.jobId))\r\n            }\r\n        } catch (error) {\r\n            yield put(showNotification(error.response.data.message, {\r\n                variant: 'error',\r\n            }))\r\n        }\r\n    }\r\n    )\r\n}\r\n\r\nexport function* updateTask() {\r\n    yield takeEvery(UPDATE_TASK, function* (payload: UpdateTaskAction) {\r\n        try {\r\n            const res = yield call(Services.updateTask, payload.payload)\r\n\r\n            if ((res as any).updatedTask) {\r\n                yield put(getAllTasks(payload.payload.jobId))\r\n            }\r\n        } catch (error) {\r\n            yield put(showNotification(error.response.data.message, {\r\n                variant: 'error',\r\n            }))\r\n        }\r\n    }\r\n    )\r\n}\r\n","F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\reducers\\tasks.ts",["257","258","259","260","261","262"],"import {\r\n    CREATE_MESSAGE_SUCCESS,\r\n    CREATE_TASK_SUCCESS,\r\n    GET_ALL_MESSAGES_SUCCESS,\r\n    GET_ALL_TASKS_SUCCESS,\r\n    Message,\r\n    MessagesActions,\r\n    Task,\r\n    TasksActions,\r\n    UPDATE_TASK_SUCCESS,\r\n} from '../types'\r\n\r\nconst defaultState: Task[] = []\r\n\r\nexport function tasks(\r\n    state = defaultState,\r\n    action: TasksActions\r\n): Task[] {\r\n    switch (action.type) {\r\n        case GET_ALL_TASKS_SUCCESS:\r\n            return [\r\n                ...action.payload\r\n            ]\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","F:\\RhombIT\\frontend\\src\\pages\\home\\view\\CustomerTab\\index.tsx",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\reducers\\index.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\sagas\\users.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\reducers\\messages.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\actions\\users.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\actions\\messages.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\redux\\actions\\tasks.ts",[],"F:\\RhombIT\\frontend\\src\\pages\\home\\view\\JobTab\\index.tsx",["263"],{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","severity":1,"message":"269","line":5,"column":1,"nodeType":"270","endLine":21,"endColumn":2},{"ruleId":"271","severity":1,"message":"272","line":3,"column":10,"nodeType":"273","messageId":"274","endLine":3,"endColumn":19},{"ruleId":"268","severity":1,"message":"269","line":5,"column":1,"nodeType":"270","endLine":13,"endColumn":2},{"ruleId":"271","severity":1,"message":"275","line":5,"column":3,"nodeType":"273","messageId":"274","endLine":5,"endColumn":19},{"ruleId":"271","severity":1,"message":"276","line":9,"column":3,"nodeType":"273","messageId":"274","endLine":9,"endColumn":22},{"ruleId":"271","severity":1,"message":"277","line":14,"column":3,"nodeType":"273","messageId":"274","endLine":14,"endColumn":17},{"ruleId":"271","severity":1,"message":"277","line":3,"column":79,"nodeType":"273","messageId":"274","endLine":3,"endColumn":93},{"ruleId":"268","severity":1,"message":"269","line":5,"column":1,"nodeType":"270","endLine":66,"endColumn":2},{"ruleId":"271","severity":1,"message":"278","line":2,"column":10,"nodeType":"273","messageId":"274","endLine":2,"endColumn":21},{"ruleId":"271","severity":1,"message":"279","line":6,"column":83,"nodeType":"273","messageId":"274","endLine":6,"endColumn":86},{"ruleId":"271","severity":1,"message":"280","line":6,"column":88,"nodeType":"273","messageId":"274","endLine":6,"endColumn":92},{"ruleId":"271","severity":1,"message":"281","line":9,"column":37,"nodeType":"273","messageId":"274","endLine":9,"endColumn":47},{"ruleId":"271","severity":1,"message":"282","line":4,"column":5,"nodeType":"273","messageId":"274","endLine":4,"endColumn":20},{"ruleId":"271","severity":1,"message":"275","line":5,"column":5,"nodeType":"273","messageId":"274","endLine":5,"endColumn":21},{"ruleId":"271","severity":1,"message":"283","line":7,"column":5,"nodeType":"273","messageId":"274","endLine":7,"endColumn":15},{"ruleId":"271","severity":1,"message":"284","line":8,"column":5,"nodeType":"273","messageId":"274","endLine":8,"endColumn":23},{"ruleId":"271","severity":1,"message":"285","line":12,"column":5,"nodeType":"273","messageId":"274","endLine":12,"endColumn":17},{"ruleId":"271","severity":1,"message":"276","line":13,"column":5,"nodeType":"273","messageId":"274","endLine":13,"endColumn":24},{"ruleId":"271","severity":1,"message":"286","line":14,"column":5,"nodeType":"273","messageId":"274","endLine":14,"endColumn":17},{"ruleId":"271","severity":1,"message":"287","line":15,"column":5,"nodeType":"273","messageId":"274","endLine":15,"endColumn":25},{"ruleId":"271","severity":1,"message":"288","line":18,"column":5,"nodeType":"273","messageId":"274","endLine":18,"endColumn":12},{"ruleId":"271","severity":1,"message":"289","line":19,"column":5,"nodeType":"273","messageId":"274","endLine":19,"endColumn":20},{"ruleId":"271","severity":1,"message":"277","line":20,"column":5,"nodeType":"273","messageId":"274","endLine":20,"endColumn":19},{"ruleId":"271","severity":1,"message":"290","line":21,"column":5,"nodeType":"273","messageId":"274","endLine":21,"endColumn":9},{"ruleId":"271","severity":1,"message":"291","line":25,"column":5,"nodeType":"273","messageId":"274","endLine":25,"endColumn":24},{"ruleId":"271","severity":1,"message":"292","line":2,"column":5,"nodeType":"273","messageId":"274","endLine":2,"endColumn":27},{"ruleId":"271","severity":1,"message":"293","line":3,"column":5,"nodeType":"273","messageId":"274","endLine":3,"endColumn":24},{"ruleId":"271","severity":1,"message":"294","line":4,"column":5,"nodeType":"273","messageId":"274","endLine":4,"endColumn":29},{"ruleId":"271","severity":1,"message":"295","line":6,"column":5,"nodeType":"273","messageId":"274","endLine":6,"endColumn":12},{"ruleId":"271","severity":1,"message":"296","line":7,"column":5,"nodeType":"273","messageId":"274","endLine":7,"endColumn":20},{"ruleId":"271","severity":1,"message":"291","line":10,"column":5,"nodeType":"273","messageId":"274","endLine":10,"endColumn":24},{"ruleId":"271","severity":1,"message":"290","line":9,"column":10,"nodeType":"273","messageId":"274","endLine":9,"endColumn":14},"no-native-reassign",["297"],"no-negated-in-lhs",["298"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'CreateJobPayload' is defined but never used.","'GetJobSuccessAction' is defined but never used.","'JobFormPayload' is defined but never used.","'useLocation' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'getAllJobs' is defined but never used.","'CreateJobAction' is defined but never used.","'CREATE_JOB' is defined but never used.","'CREATE_JOB_SUCCESS' is defined but never used.","'GetJobAction' is defined but never used.","'GET_ALL_JOBS' is defined but never used.","'GET_ALL_JOBS_SUCCESS' is defined but never used.","'GET_JOB' is defined but never used.","'GET_JOB_SUCCESS' is defined but never used.","'Jobs' is defined but never used.","'UPDATE_TASK_SUCCESS' is defined but never used.","'CREATE_MESSAGE_SUCCESS' is defined but never used.","'CREATE_TASK_SUCCESS' is defined but never used.","'GET_ALL_MESSAGES_SUCCESS' is defined but never used.","'Message' is defined but never used.","'MessagesActions' is defined but never used.","no-global-assign","no-unsafe-negation"]